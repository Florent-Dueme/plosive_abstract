library(ggplot2)
library(lme4)
library(emmeans)
library(rstatix) # Function rstatix::convert_as_factor
library(MASS) # Function MASS::fractions
library(sjPlot) # Function sjPlot::tab_model
# Now using only the tokens not produced as fricatives
spanish_plo <- spanish[spanish$Burst == "True",]
knitr::opts_chunk$set(echo = TRUE)
Sys.setenv(LANG = "en") # Set error language to English
library(tidyverse)
library(ggplot2)
library(lme4)
library(emmeans)
library(rstatix) # Function rstatix::convert_as_factor
library(MASS) # Function MASS::fractions
library(sjPlot) # Function sjPlot::tab_model
data = as.data.frame(read.csv("all_data_burst_24_01_2022.csv", sep=";"),header=T,sep=";",dec=".")
data$Plosion_index = as.numeric(data$Plosion_index)
data$VOT = as.numeric(data$VOT)
data$Length = as.numeric(data$Length)
str(data)
# Separate data by language
french <- data[data$Language=="French",]
spanish <- data[data$Language=="Spanish",]
# Make factors
french <- french %>% convert_as_factor(Speaker, Gender, Group, Task, Grapheme, Word)
french$Group <- relevel(french$Group, 'Monolinguals')
french$Grapheme <- relevel(french$Grapheme, 'b')
spanish <- spanish %>% convert_as_factor(Speaker, Gender, Group, Task, Grapheme, Word)
spanish$Group <- relevel(spanish$Group, 'Monolinguals')
spanish$Grapheme <- relevel(spanish$Grapheme, 'b')
str(french)
str(spanish)
# Create contrasts
F_VS_M <- c(-1, 1)
Mono_VS_Bi <- c(-1, 1)
b_VS_v <- c(-1, 1)
contrasts(french$Gender) <- F_VS_M
contrasts(french$Group) <- Mono_VS_Bi
contrasts(french$Grapheme) <- b_VS_v
contrasts(spanish$Gender) <- F_VS_M
contrasts(spanish$Group) <- Mono_VS_Bi
contrasts(spanish$Grapheme) <- b_VS_v
# Custom contrast for task
Contrasts <- rbind(
Name_Vs_Rest = c(name=2, PW=-1, read=-1),
read_VS_PW = c(name=0, PW=1, read=-1)
)
# fractions(t(Contrasts))
# Function to calculate general inverse
ginv2 <- function(x)
fractions(provideDimnames(ginv(x),
base=dimnames(x)[2:1]))
contrast_mat <- ginv2(Contrasts)
# contrast_mat
# PI_f <-lmer(log(Plosion_index) ~ Task*Group*Grapheme + Gender + (Task|Speaker) + (Grapheme|Speaker) + (Group|Word), data = french,
# contrasts = list(Task=contrast_mat))
PI_f <-lmer(Plosion_index ~ Group*Grapheme + Gender + Task + (Grapheme|Speaker) + (Group|Word), data = french)
# summary(PI_f)
tab_model(PI_f)
# lmer(Distance ~ Time_contrast * Group + (Time_contrast |Participant), data = e_data)
# PI_s <-lmer(log(Plosion_index) ~ Group*Grapheme*Task + Gender + (Task|Speaker) + (Grapheme|Speaker) + (Group|Word), data = spanish,
# contrasts = list(Task=contrast_mat))
PI_s <-lmer(log(Plosion_index) ~ Group*Grapheme + Task + Gender + (Grapheme|Speaker) + (Group|Word), data = spanish)
# summary(PI_s)
tab_model(PI_s)
# Now using only the tokens not produced as fricatives
spanish_plo <- spanish[spanish$Burst == "True",]
PI_s_plo <-lmer(Plosion_index ~ Group*Grapheme + Gender + Task + (Grapheme|Speaker) + (Group|Word), data = spanish_plo)
View(spanish)
# Now using only the tokens not produced as fricatives
spanish_plo <- spanish[spanish$Burst == 1,]
PI_s_plo <-lmer(Plosion_index ~ Group*Grapheme + Gender + Task + (Grapheme|Speaker) + (Group|Word), data = spanish_plo)
tab_model(PI_s_plo)
# Now using only the tokens not produced as fricatives
spanish_plo <- spanish[spanish$Burst == 1,]
PI_s_plo <-lmer(log(Plosion_index) ~ Group*Grapheme + Gender + Task + (Grapheme|Speaker) + (Group|Word), data = spanish_plo)
tab_model(PI_s_plo)
PI_f <-lmer(log(Plosion_index) ~ Group*Grapheme + Gender + Task + (Grapheme|Speaker) + (Group|Word), data = french)
# PI_f <-lmer(log(Plosion_index) ~ Task*Group*Grapheme + Gender + (Task|Speaker) + (Grapheme|Speaker) + (Group|Word), data = french,
# contrasts = list(Task=contrast_mat))
PI_f <-lmer(log(Plosion_index) ~ Group*Grapheme + Gender + Task + (Grapheme|Speaker) + (Group|Word), data = french)
# summary(PI_f)
tab_model(PI_f)
# lmer(Distance ~ Time_contrast * Group + (Time_contrast |Participant), data = e_data)
# PI_f <-lmer(log(Plosion_index) ~ Task*Group*Grapheme + Gender + (Task|Speaker) + (Grapheme|Speaker) + (Group|Word), data = french,
# contrasts = list(Task=contrast_mat))
PI_f <-lmer(log(Plosion_index) ~ Group*Grapheme + Gender + Task + (Grapheme|Speaker) + (Group|Word), data = french, contrasts = list(Task=contrast_mat))
# summary(PI_f)
tab_model(PI_f)
# lmer(Distance ~ Time_contrast * Group + (Time_contrast |Participant), data = e_data)
str(french)
# PI_f <-lmer(log(Plosion_index) ~ Task*Group*Grapheme + Gender + (Task|Speaker) + (Grapheme|Speaker) + (Group|Word), data = french,
# contrasts = list(Task=contrast_mat))
PI_f <-lmer(log(Plosion_index) ~ Group*Grapheme + Gender + Task + (Grapheme|Speaker) + (Group|Word), data = french,
# contrasts = list(Task=contrast_mat)
)
# summary(PI_f)
tab_model(PI_f)
# lmer(Distance ~ Time_contrast * Group + (Time_contrast |Participant), data = e_data)
# PI_s <-lmer(log(Plosion_index) ~ Group*Grapheme*Task + Gender + (Task|Speaker) + (Grapheme|Speaker) + (Group|Word), data = spanish,
# contrasts = list(Task=contrast_mat))
PI_s <-lmer(log(Plosion_index) ~ Group*Grapheme + Task + Gender + (Grapheme|Speaker) + (Group|Word), data = spanish
# contrasts = list(Task=contrast_mat)
)
# summary(PI_s)
tab_model(PI_s)
# PI_s <-lmer(log(Plosion_index) ~ Group*Grapheme*Task + Gender + (Task|Speaker) + (Grapheme|Speaker) + (Group|Word), data = spanish,
# contrasts = list(Task=contrast_mat))
PI_s <-lmer(log(Plosion_index) ~ Group*Grapheme + Task + Gender + (Grapheme|Speaker) + (Group|Word), data = spanish
contrasts = list(Task=contrast_mat)
# PI_s <-lmer(log(Plosion_index) ~ Group*Grapheme*Task + Gender + (Task|Speaker) + (Grapheme|Speaker) + (Group|Word), data = spanish,
# contrasts = list(Task=contrast_mat))
PI_s <-lmer(log(Plosion_index) ~ Group*Grapheme + Task + Gender + (Grapheme|Speaker) + (Group|Word), data = spanish,
contrasts = list(Task=contrast_mat)
)
# summary(PI_s)
tab_model(PI_s)
knitr::opts_chunk$set(echo = TRUE)
Sys.setenv(LANG = "en") # Set error language to English
library(tidyverse)
library(ggplot2)
library(lme4)
library(emmeans)
library(rstatix) # Function rstatix::convert_as_factor
library(MASS) # Function MASS::fractions
library(sjPlot) # Function sjPlot::tab_model
data = as.data.frame(read.csv("all_data_burst_24_01_2022.csv", sep=";"),header=T,sep=";",dec=".")
data$Plosion_index = as.numeric(data$Plosion_index)
data$VOT = as.numeric(data$VOT)
data$Length = as.numeric(data$Length)
str(data)
# Separate data by language
french <- data[data$Language=="French",]
spanish <- data[data$Language=="Spanish",]
# Make factors
french <- french %>% convert_as_factor(Speaker, Gender, Group, Task, Grapheme, Word)
french$Group <- relevel(french$Group, 'Monolinguals')
french$Grapheme <- relevel(french$Grapheme, 'b')
spanish <- spanish %>% convert_as_factor(Speaker, Gender, Group, Task, Grapheme, Word)
spanish$Group <- relevel(spanish$Group, 'Monolinguals')
spanish$Grapheme <- relevel(spanish$Grapheme, 'b')
str(french)
str(spanish)
# Create contrasts
F_VS_M <- c(-1, 1)
Mono_VS_Bi <- c(-1, 1)
b_VS_v <- c(-1, 1)
contrasts(french$Gender) <- F_VS_M
contrasts(french$Group) <- Mono_VS_Bi
contrasts(french$Grapheme) <- b_VS_v
contrasts(spanish$Gender) <- F_VS_M
contrasts(spanish$Group) <- Mono_VS_Bi
contrasts(spanish$Grapheme) <- b_VS_v
# Custom contrast for task
Contrasts <- rbind(
Naming_Vs_Reading = c(name=2, PW=-1, read=-1),
Word_VS_PW = c(name=0, PW=1, read=-1)
)
# fractions(t(Contrasts))
# Function to calculate general inverse
ginv2 <- function(x)
fractions(provideDimnames(ginv(x),
base=dimnames(x)[2:1]))
contrast_mat <- ginv2(Contrasts)
# contrast_mat
# PI_f <-lmer(log(Plosion_index) ~ Task*Group*Grapheme + Gender + (Task|Speaker) + (Grapheme|Speaker) + (Group|Word), data = french,
# contrasts = list(Task=contrast_mat))
PI_f <-lmer(log(Plosion_index) ~ Group*Grapheme + Gender + Task + (Grapheme|Speaker) + (Group|Word), data = french,
contrasts = list(Task=contrast_mat)
)
# summary(PI_f)
tab_model(PI_f)
# lmer(Distance ~ Time_contrast * Group + (Time_contrast |Participant), data = e_data)
# PI_s <-lmer(log(Plosion_index) ~ Group*Grapheme*Task + Gender + (Task|Speaker) + (Grapheme|Speaker) + (Group|Word), data = spanish,
# contrasts = list(Task=contrast_mat))
PI_s <-lmer(log(Plosion_index) ~ Group*Grapheme + Task + Gender + (Grapheme|Speaker) + (Group|Word), data = spanish,
contrasts = list(Task=contrast_mat)
)
# summary(PI_s)
tab_model(PI_s)
PI_s <-lmer(log(Plosion_index) ~ Group*Grapheme*Task + Gender + (Task|Speaker) + (Grapheme|Speaker) + (Group|Word), data = spanish,
contrasts = list(Task=contrast_mat))
# PI_s <-lmer(log(Plosion_index) ~ Group*Grapheme + Task + Gender + (Grapheme|Speaker) + (Group|Word), data = spanish,
#             contrasts = list(Task=contrast_mat)
# )
# summary(PI_s)
tab_model(PI_s)
# PI_s <-lmer(log(Plosion_index) ~ Group*Grapheme*Task + Gender + (Task|Speaker) + (Grapheme|Speaker) + (Group|Word), data = spanish,
# contrasts = list(Task=contrast_mat))
PI_s <-lmer(log(Plosion_index) ~ Group*Grapheme + Task + Gender + (Grapheme|Speaker) + (Group|Word), data = spanish,
contrasts = list(Task=contrast_mat)
)
# summary(PI_s)
tab_model(PI_s)
# PI_f <-lmer(log(Plosion_index) ~ Task*Group*Grapheme + Gender + (Task|Speaker) + (Grapheme|Speaker) + (Group|Word), data = french,
# contrasts = list(Task=contrast_mat))
PI_f <-lmer(log(Plosion_index) ~ Group*Grapheme + Gender + Task + (Grapheme|Speaker) + (Group|Word), data = french,
contrasts = list(Task=contrast_mat)
)
summary(PI_f)
tab_model(PI_f)
# lmer(Distance ~ Time_contrast * Group + (Time_contrast |Participant), data = e_data)
# PI_f <-lmer(log(Plosion_index) ~ Task*Group*Grapheme + Gender + (Task|Speaker) + (Grapheme|Speaker) + (Group|Word), data = french,
# contrasts = list(Task=contrast_mat))
PI_f <-lmer(log(Plosion_index) ~ Group*Grapheme + Gender + (Grapheme|Speaker) + (Group|Word), data = french,
contrasts = list(Task=contrast_mat)
)
summary(PI_f)
tab_model(PI_f)
# lmer(Distance ~ Time_contrast * Group + (Time_contrast |Participant), data = e_data)
# PI_f <-lmer(log(Plosion_index) ~ Task*Group*Grapheme + Gender + (Task|Speaker) + (Grapheme|Speaker) + (Group|Word), data = french,
# contrasts = list(Task=contrast_mat))
PI_f <-lmer(log(Plosion_index) ~ Group*Grapheme + Gender + Task + (Grapheme|Speaker) + (Group|Word), data = french,
contrasts = list(Task=contrast_mat)
)
summary(PI_f)
tab_model(PI_f)
# lmer(Distance ~ Time_contrast * Group + (Time_contrast |Participant), data = e_data)
# The full model fails to converge
# PI_f <-lmer(log(Plosion_index) ~ Task*Group*Grapheme + Gender + (Task|Speaker) + (Grapheme|Speaker) + (Group|Word), data = french,
# contrasts = list(Task=contrast_mat))
# After removing factors that do not improve the model fit, I am left with a model without a fixed effect of Task, that does converge
PI_f <-lmer(log(Plosion_index) ~ Group*Grapheme + Gender + (Grapheme|Speaker) + (Group|Word), data = french)
# summary(PI_f)
tab_model(PI_f)
# The full model fails to converge
# PI_f <-lmer(log(Plosion_index) ~ Task*Group*Grapheme + Gender + (Task|Speaker) + (Grapheme|Speaker) + (Group|Word), data = french,
# contrasts = list(Task=contrast_mat))
# After removing factors that do not improve the model fit, I am left with a model without a fixed effect of Task, that does converge
PI_f <-lmer(log(Plosion_index) ~ Group*Grapheme + Gender + Task + (Grapheme|Speaker), data = french)
# summary(PI_f)
tab_model(PI_f)
# The full model fails to converge
# PI_f <-lmer(log(Plosion_index) ~ Task*Group*Grapheme + Gender + (Task|Speaker) + (Grapheme|Speaker) + (Group|Word), data = french,
# contrasts = list(Task=contrast_mat))
# After removing factors that do not improve the model fit, I am left with a model without a fixed effect of Task, that does converge
PI_f <-lmer(log(Plosion_index) ~ Group*Grapheme + Gender + Task + (Grapheme|Speaker), data = french,
contrasts = list(Task=contrast_mat))
# summary(PI_f)
tab_model(PI_f)
# The full model fails to converge
# PI_f_no_convergence <-lmer(log(Plosion_index) ~ Task*Group*Grapheme + Gender + (Task|Speaker) + (Grapheme|Speaker) + (Group|Word), data = french,
# contrasts = list(Task=contrast_mat))
# After removing the random slope for Task by Word, the model does converge
PI_f <-lmer(log(Plosion_index) ~ Group*Grapheme + Gender + Task + (Grapheme|Speaker) + (1|Word), data = french,
contrasts = list(Task=contrast_mat))
# summary(PI_f)
tab_model(PI_f)
# The full model fails to converge
# PI_f_no_convergence <-lmer(log(Plosion_index) ~ Task*Group*Grapheme + Gender + (Task|Speaker) + (Grapheme|Speaker) + (Group|Word), data = french, contrasts = list(Task=contrast_mat))
# After removing the random slope for Task by Word, the model does converge
PI_f <-lmer(log(Plosion_index) ~ Group*Grapheme + Gender + Task + (Grapheme|Speaker) + (1|Word), data = french)
# summary(PI_f)
tab_model(PI_f)
# The full model fails to converge
# PI_f_no_convergence <-lmer(log(Plosion_index) ~ Task*Group*Grapheme + Gender + (Task|Speaker) + (Grapheme|Speaker) + (Group|Word), data = french, contrasts = list(Task=contrast_mat))
# After removing the random slope for Task by Word, the model does converge
PI_f <-lmer(log(Plosion_index) ~ Group*Grapheme + Gender + Task + (Grapheme|Speaker) + (1|Word), data = french,
contrasts = list(Task=contrast_mat))
# summary(PI_f)
tab_model(PI_f)
PI_s <-lmer(log(Plosion_index) ~ Group*Grapheme*Task + Gender + (Task|Speaker) + (Grapheme|Speaker) + (Group|Word), data = spanish,
contrasts = list(Task=contrast_mat))
# PI_s <-lmer(log(Plosion_index) ~ Group*Grapheme + Gender + (Grapheme|Speaker) + (Group|Word), data = spanish,
#             contrasts = list(Task=contrast_mat)
)
PI_s <-lmer(log(Plosion_index) ~ Group*Grapheme*Task + Gender + (Task|Speaker) + (Grapheme|Speaker) + (Group|Word), data = spanish,
contrasts = list(Task=contrast_mat))
# PI_s <-lmer(log(Plosion_index) ~ Group*Grapheme + Gender + (Grapheme|Speaker) + (Group|Word), data = spanish,
#             contrasts = list(Task=contrast_mat)
# )
# summary(PI_s)
tab_model(PI_s)
PI_s <-lmer(log(Plosion_index) ~ Group*Grapheme*Task + Gender + (Task|Speaker) + (Grapheme|Speaker) + (Group|Word), data = spanish,
contrasts = list(Task=contrast_mat))
# PI_s <-lmer(log(Plosion_index) ~ Group*Grapheme + Gender + (Grapheme|Speaker) + (Group|Word), data = spanish,
#             contrasts = list(Task=contrast_mat)
# )
# summary(PI_s)
tab_model(PI_s)
# The full model fails to converge
# PI_f_no_convergence <-lmer(log(Plosion_index) ~ Task*Group*Grapheme + Gender + (Task|Speaker) + (Grapheme|Speaker) + (Group|Word), data = french, contrasts = list(Task=contrast_mat))
# After removing the random slope for Task by Word, the model does converge
PI_f <-lmer(log(Plosion_index) ~ Group*Grapheme + Gender + Task + (Grapheme|Speaker) + (Task|Speaker) + (1|Word), data = french,
contrasts = list(Task=contrast_mat))
# summary(PI_f)
tab_model(PI_f)
# The full model fails to converge
# PI_f_no_convergence <-lmer(log(Plosion_index) ~ Task*Group*Grapheme + Gender + (Task|Speaker) + (Grapheme|Speaker) + (Group|Word), data = french, contrasts = list(Task=contrast_mat))
# After removing the random slope for Task by Word, the model does converge
PI_f <-lmer(log(Plosion_index) ~ Group*Grapheme + Gender + Task + (Grapheme|Speaker) + (Group|Word), data = french,
contrasts = list(Task=contrast_mat))
# summary(PI_f)
tab_model(PI_f)
# The full model fails to converge
# PI_f_no_convergence <-lmer(log(Plosion_index) ~ Task*Group*Grapheme + Gender + (Task|Speaker) + (Grapheme|Speaker) + (Group|Word), data = french, contrasts = list(Task=contrast_mat))
# After removing the random slope for Task by Word, the model does converge
PI_f <-lmer(log(Plosion_index) ~ Group*Grapheme + Gender + Task + (Grapheme|Speaker) + (1|Word), data = french,
contrasts = list(Task=contrast_mat))
# summary(PI_f)
tab_model(PI_f)
# The full model fails to converge
# PI_f_no_convergence <-lmer(log(Plosion_index) ~ Task*Group*Grapheme + Gender + (Task|Speaker) + (Grapheme|Speaker) + (Group|Word), data = french, contrasts = list(Task=contrast_mat))
# After removing the interactions involving Task and some of the random slopes, the model does converge
PI_f <-lmer(log(Plosion_index) ~ Group*Grapheme + Gender + Task + (Grapheme|Speaker) + (1|Word), data = french,
contrasts = list(Task=contrast_mat))
# summary(PI_f)
tab_model(PI_f)
anova(PI_f, PI_f_no_convergence)
# The full model fails to converge
PI_f_no_convergence <-lmer(log(Plosion_index) ~ Task*Group*Grapheme + Gender + (Task|Speaker) + (Grapheme|Speaker) + (Group|Word), data = french, contrasts = list(Task=contrast_mat))
# After removing the interactions involving Task and some of the random slopes, the model does converge
PI_f <-lmer(log(Plosion_index) ~ Group*Grapheme + Gender + Task + (Grapheme|Speaker) + (1|Word), data = french,
contrasts = list(Task=contrast_mat))
# summary(PI_f)
tab_model(PI_f)
anova(PI_f, PI_f_no_convergence)
knitr::opts_chunk$set(echo = TRUE)
Sys.setenv(LANG = "en") # Set error language to English
library(tidyverse)
library(ggplot2)
library(lme4)
library(emmeans)
library(rstatix) # Function rstatix::convert_as_factor
library(MASS) # Function MASS::fractions
library(sjPlot) # Function sjPlot::tab_model
data = as.data.frame(read.csv("all_data_burst_24_01_2022.csv", sep=";"),header=T,sep=";",dec=".")
data$Plosion_index = as.numeric(data$Plosion_index)
data$VOT = as.numeric(data$VOT)
data$Length = as.numeric(data$Length)
str(data)
# Separate data by language
french <- data[data$Language=="French",]
spanish <- data[data$Language=="Spanish",]
# Make factors
french <- french %>% convert_as_factor(Speaker, Gender, Group, Task, Grapheme, Word)
french$Group <- relevel(french$Group, 'Monolinguals')
french$Grapheme <- relevel(french$Grapheme, 'b')
spanish <- spanish %>% convert_as_factor(Speaker, Gender, Group, Task, Grapheme, Word)
spanish$Group <- relevel(spanish$Group, 'Monolinguals')
spanish$Grapheme <- relevel(spanish$Grapheme, 'b')
str(french)
str(spanish)
# Create contrasts
F_VS_M <- c(-1, 1)
Mono_VS_Bi <- c(-1, 1)
b_VS_v <- c(-1, 1)
contrasts(french$Gender) <- F_VS_M
contrasts(french$Group) <- Mono_VS_Bi
contrasts(french$Grapheme) <- b_VS_v
contrasts(spanish$Gender) <- F_VS_M
contrasts(spanish$Group) <- Mono_VS_Bi
contrasts(spanish$Grapheme) <- b_VS_v
# Custom contrast for task
Contrasts <- rbind(
Naming_Vs_Reading = c(name=2, PW=-1, read=-1),
Word_VS_PW = c(name=0, PW=1, read=-1)
)
# fractions(t(Contrasts))
# Function to calculate general inverse
ginv2 <- function(x)
fractions(provideDimnames(ginv(x),
base=dimnames(x)[2:1]))
contrast_mat <- ginv2(Contrasts)
# contrast_mat
# The full model fails to converge
PI_f_no_convergence <-lmer(log(Plosion_index) ~ Task*Group*Grapheme + Gender + (Task|Speaker) + (Grapheme|Speaker) + (Group|Word), data = french, contrasts = list(Task=contrast_mat))
# After removing the interactions involving Task and some of the random slopes, the model does converge
# PI_f <-lmer(log(Plosion_index) ~ Group*Grapheme + Gender + Task + (Grapheme|Speaker) + (1|Word), data = french,
#             contrasts = list(Task=contrast_mat))
summary(PI_f)
summary(PI_f_no_convergence)
# The full model fails to converge
PI_f_no_convergence <-lmer(log(Plosion_index) ~ Task*Group*Grapheme + Gender + (Task|Speaker) + (Grapheme|Speaker), data = french, contrasts = list(Task=contrast_mat))
# After removing the interactions involving Task and some of the random slopes, the model does converge
# PI_f <-lmer(log(Plosion_index) ~ Group*Grapheme + Gender + Task + (Grapheme|Speaker) + (1|Word), data = french,
#             contrasts = list(Task=contrast_mat))
summary(PI_f_no_convergence)
# tab_model(PI_f)
# The full model fails to converge
PI_f_no_convergence <-lmer(log(Plosion_index) ~ Task*Group*Grapheme + Gender + (Grapheme|Speaker), data = french, contrasts = list(Task=contrast_mat))
# After removing the interactions involving Task and some of the random slopes, the model does converge
# PI_f <-lmer(log(Plosion_index) ~ Group*Grapheme + Gender + Task + (Grapheme|Speaker) + (1|Word), data = french,
#             contrasts = list(Task=contrast_mat))
summary(PI_f_no_convergence)
# tab_model(PI_f)
# The full model fails to converge
PI_f_no_convergence <-lmer(log(Plosion_index) ~ Task*Group*Grapheme + Gender, data = french, contrasts = list(Task=contrast_mat))
# The full model fails to converge
PI_f_no_convergence <-lmer(log(Plosion_index) ~ Task*Group*Grapheme + Gender + 1|Speaker + 1|Word, data = french, contrasts = list(Task=contrast_mat))
# The full model fails to converge
PI_f_no_convergence <-lmer(log(Plosion_index) ~ Task*Group*Grapheme + Gender + (1|Speaker) + (1|Word), data = french, contrasts = list(Task=contrast_mat))
# After removing the interactions involving Task and some of the random slopes, the model does converge
# PI_f <-lmer(log(Plosion_index) ~ Group*Grapheme + Gender + Task + (Grapheme|Speaker) + (1|Word), data = french,
#             contrasts = list(Task=contrast_mat))
summary(PI_f_no_convergence)
# tab_model(PI_f)
# The full model fails to converge
PI_f_no_convergence <-lmer(log(Plosion_index) ~ Task*Group*Grapheme + Gender + (1|Speaker) + (1|Word), data = french, contrasts = contr.sum())
# The full model fails to converge
PI_f_no_convergence <-lmer(log(Plosion_index) ~ Task*Group*Grapheme + Gender + (1|Speaker) + (1|Word), data = french, contrasts = contr.sum(3))
# After removing the interactions involving Task and some of the random slopes, the model does converge
# PI_f <-lmer(log(Plosion_index) ~ Group*Grapheme + Gender + Task + (Grapheme|Speaker) + (1|Word), data = french,
#             contrasts = list(Task=contrast_mat))
summary(PI_f_no_convergence)
# tab_model(PI_f)
# The full model fails to converge
PI_f_no_convergence <-lmer(log(Plosion_index) ~ Group*Grapheme + Task + Gender + (1|Speaker) + (1|Word), data = french, contrasts = contr.sum(3))
# After removing the interactions involving Task and some of the random slopes, the model does converge
# PI_f <-lmer(log(Plosion_index) ~ Group*Grapheme + Gender + Task + (Grapheme|Speaker) + (1|Word), data = french,
#             contrasts = list(Task=contrast_mat))
summary(PI_f_no_convergence)
# tab_model(PI_f)
tab_model(PI_f_no_convergence)
# The full model fails to converge
PI_f_no_convergence <-lmer(log(Plosion_index) ~ Group*Grapheme + Task + Gender + (1|Speaker) + (1|Word), data = french, contrasts = list(Task = contr.sum(3)))
# After removing the interactions involving Task and some of the random slopes, the model does converge
# PI_f <-lmer(log(Plosion_index) ~ Group*Grapheme + Gender + Task + (Grapheme|Speaker) + (1|Word), data = french,
#             contrasts = list(Task=contrast_mat))
summary(PI_f_no_convergence)
tab_model(PI_f_no_convergence)
# The full model fails to converge
PI_f_no_convergence <-lmer(log(Plosion_index) ~ Group*Grapheme*Task + Gender + (1|Speaker) + (1|Word), data = french, contrasts = list(Task = contr.sum(3)))
# After removing the interactions involving Task and some of the random slopes, the model does converge
# PI_f <-lmer(log(Plosion_index) ~ Group*Grapheme + Gender + Task + (Grapheme|Speaker) + (1|Word), data = french,
#             contrasts = list(Task=contrast_mat))
summary(PI_f_no_convergence)
tab_model(PI_f_no_convergence)
help("convergence")
# The full model fails to converge
PI_f_no_convergence <-lmer(log(Plosion_index) ~ Group*Grapheme*Task + Gender + (1|Speaker) + (1|Word), data = french, contrasts = list(Task = contr.sum(3)))
# After removing the interactions involving Task and some of the random slopes, the model does converge
# PI_f <-lmer(log(Plosion_index) ~ Group*Grapheme + Gender + Task + (Grapheme|Speaker) + (1|Word), data = french,
#             contrasts = list(Task=contrast_mat))
summary(PI_f_no_convergence)
tab_model(PI_f_no_convergence)
# The full model fails to converge
PI_f_no_convergence <-lmer(log(Plosion_index) ~ Group*Grapheme*Task + Gender + (Grapheme|Speaker) + (1|Word), data = french, contrasts = list(Task = contr.sum(3)))
# After removing the interactions involving Task and some of the random slopes, the model does converge
# PI_f <-lmer(log(Plosion_index) ~ Group*Grapheme + Gender + Task + (Grapheme|Speaker) + (1|Word), data = french,
#             contrasts = list(Task=contrast_mat))
summary(PI_f_no_convergence)
tab_model(PI_f_no_convergence)
# The full model fails to converge
PI_f_no_convergence <-lmer(log(Plosion_index) ~ Group*Grapheme*Task + Gender + (Grapheme|Speaker) + (Group|Word), data = french, contrasts = list(Task = contr.sum(3)))
# After removing the interactions involving Task and some of the random slopes, the model does converge
# PI_f <-lmer(log(Plosion_index) ~ Group*Grapheme + Gender + Task + (Grapheme|Speaker) + (1|Word), data = french,
#             contrasts = list(Task=contrast_mat))
summary(PI_f_no_convergence)
tab_model(PI_f_no_convergence)
# The full model fails to converge
PI_f_no_convergence <-lmer(log(Plosion_index) ~ Group*Grapheme*Task + Gender + (Grapheme|Speaker) + (Group|Word), data = french, contrasts = list(Task = contr.sum(3)), glmerControl(optimizer="bobyqa"))
# The full model fails to converge
PI_f_no_convergence <-lmer(log(Plosion_index) ~ Group*Grapheme*Task + Gender + (Grapheme|Speaker) + (Group|Word), data = french,
glmerControl(optimizer="bobyqa"), contrasts = list(Task = contr.sum(3)))
# The full model fails to converge
PI_f_no_convergence <-lmer(log(Plosion_index) ~ Group*Grapheme*Task + Gender + (Grapheme|Speaker) + (Group|Word), data = french,
optimizer="bobyqa", contrasts = list(Task = contr.sum(3)))
# The full model fails to converge
PI_f_no_convergence <-lmer(log(Plosion_index) ~ Group*Grapheme*Task + Gender + (Grapheme|Speaker) + (Group|Word), data = french, contrasts = list(Task = contr.sum(3)))
# After removing the interactions involving Task and some of the random slopes, the model does converge
# PI_f <-lmer(log(Plosion_index) ~ Group*Grapheme + Gender + Task + (Grapheme|Speaker) + (1|Word), data = french,
#             contrasts = list(Task=contrast_mat))
summary(PI_f_no_convergence)
tab_model(PI_f_no_convergence)
PI_s <-lmer(log(Plosion_index) ~ Group*Grapheme*Task + Gender + (Grapheme|Speaker) + (1|Word), data = spanish,
contrasts = list(Task=contrast_mat))
# PI_s <-lmer(log(Plosion_index) ~ Group*Grapheme + Task + Gender + (Grapheme|Speaker) + (Group|Word), data = spanish,
#             contrasts = list(Task=contrast_mat))
summary(PI_s)
tab_model(PI_s)
# The full model fails to converge
PI_f_no_convergence <-lmer(log(Plosion_index) ~ Group*Grapheme*Task + Gender + (Grapheme|Speaker) + (1|Word), data = french, contrasts = list(Task = contr.sum(3)))
# After removing the interactions involving Task and some of the random slopes, the model does converge
# PI_f <-lmer(log(Plosion_index) ~ Group*Grapheme + Gender + Task + (Grapheme|Speaker) + (1|Word), data = french,
#             contrasts = list(Task=contrast_mat))
summary(PI_f_no_convergence)
tab_model(PI_f_no_convergence)
# The full model fails to converge
PI_f_no_convergence <-lmer(log(Plosion_index) ~ Group*Grapheme*Task + Gender + (Grapheme|Speaker) + (1|Word), data = french,
contrasts = list(Task = contr.sum(3)), control=lmerControl(optCtrl=list(maxfun=20000)))
# After removing the interactions involving Task and some of the random slopes, the model does converge
# PI_f <-lmer(log(Plosion_index) ~ Group*Grapheme + Gender + Task + (Grapheme|Speaker) + (1|Word), data = french,
#             contrasts = list(Task=contrast_mat))
summary(PI_f_no_convergence)
tab_model(PI_f_no_convergence)
# The full model fails to converge
PI_f_no_convergence <-lmer(log(Plosion_index) ~ Group*Grapheme*Task + Gender + (Grapheme|Speaker) + (Group|Word), data = french,
contrasts = list(Task = contr.sum(3)), control=lmerControl(optCtrl=list(maxfun=20000)))
# After removing the interactions involving Task and some of the random slopes, the model does converge
# PI_f <-lmer(log(Plosion_index) ~ Group*Grapheme + Gender + Task + (Grapheme|Speaker) + (1|Word), data = french,
#             contrasts = list(Task=contrast_mat))
summary(PI_f_no_convergence)
tab_model(PI_f_no_convergence)
# The full model fails to converge
PI_f_no_convergence <-lmer(log(Plosion_index) ~ Group*Grapheme*Task + Gender + (Grapheme|Speaker) + (Group|Word), data = french,
contrasts = list(Task = contr.sum(3)), control=lmerControl(optCtrl=list(maxfun=20000), optimizer="bobyqa"))
# After removing the interactions involving Task and some of the random slopes, the model does converge
# PI_f <-lmer(log(Plosion_index) ~ Group*Grapheme + Gender + Task + (Grapheme|Speaker) + (1|Word), data = french,
#             contrasts = list(Task=contrast_mat))
summary(PI_f_no_convergence)
tab_model(PI_f_no_convergence)
# The full model fails to converge
PI_f_no_convergence <-lmer(log(Plosion_index) ~ Group*Grapheme*Task + Gender + (Grapheme|Speaker) + (Group|Word), data = french,
contrasts = list(Task = contr.sum(3)), control=lmerControl(optCtrl=list(maxfun=50000), optimizer="bobyqa"))
# After removing the interactions involving Task and some of the random slopes, the model does converge
# PI_f <-lmer(log(Plosion_index) ~ Group*Grapheme + Gender + Task + (Grapheme|Speaker) + (1|Word), data = french,
#             contrasts = list(Task=contrast_mat))
summary(PI_f_no_convergence)
tab_model(PI_f_no_convergence)
